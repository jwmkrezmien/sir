{% extends 'PwcSirBundle::base.html.twig' %}
{% form_theme form 'PwcSirBundle:Form:fields.html.twig' %}

{% block content %}
    <h1>{{ 'form.label.vulnref._manage' | trans() }}</h1>

    <form action="{{ path('vulnerability_references_update', { 'slug': entity.slug }) }}" method="post" {{ form_enctype(form) }}>

        {{ form_label(form.vulnRefs) }}
        <ul id="{{ form.vulnRefs.vars.id }}"  class="vulnRefs form-collection" data-prototype="{{ form_widget(form.vulnRefs.vars.prototype)|e }}">
            {% for vulnRef in form.vulnRefs %}
                <li class="embedded-child">
                    {{ form_row(vulnRef.name) }}
                    {{ form_row(vulnRef.hyperlink) }}
                </li>
            {% endfor %}
        </ul>

        {{ form_rest(form) }}

        <ul class="record_actions">
            <li class="submit"><button type="submit">{{ 'form.general.submit.create' | trans() }}</button></li>
            <li class="cancel">
                <a href="{{ path('vulndescription') }}">{{ 'form.general.back' | trans() }}</a>
            </li>
        </ul>
    </form>

    <script>
    // Get the div that holds the collection of tags
    var collectionHolder = $('ul.vulnRefs');

    // setup an "add a tag" link
    var $addTagLink = $('<a href="#">Add a tag</a>');
    var $newLinkLi = $('<li></li>').attr('class', 'add-child').append($addTagLink);

    $(document).ready(function() {

        collectionHolder.find('li').each(function() {
            addTagFormDeleteLink($(this));
        });

        // add the "add a tag" anchor and li to the tags ul
        collectionHolder.append($newLinkLi);

        $addTagLink.on('click', function(e) {

            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addTagForm(collectionHolder, $newLinkLi);
        });

        function addTagForm(collectionHolder, $newLinkLi)
        {
            // Get the data-prototype explained earlier
            var prototype = collectionHolder.attr('data-prototype');

            // count the current form inputs we have (e.g. 2), use that as the new index (e.g. 2)
            var newIndex = collectionHolder.find(':input').length;

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, newIndex);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').attr('class', 'embedded-child').append(newForm);
            $newLinkLi.before($newFormLi);

            // add a delete link to the new form
            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<a href="#" class="delete-child">delete this tag</a>');
            $tagFormLi.append($removeFormA);

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }
    });


    </script>

{% endblock %}